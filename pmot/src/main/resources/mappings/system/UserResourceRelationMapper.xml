<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cs.system.dao.UserResourceRelationDao" >
  <resultMap id="BaseResultMap" type="com.cs.system.entity.UserResourceRelation" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="AUTHORIZE_TYPE" property="authorizeType" />
    <result column="RESOURCE_ID" property="resourceId" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="CREATED_DATE" property="createdDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, AUTHORIZE_TYPE, RESOURCE_ID, USER_ID, CREATED_DATE
  </sql>
   
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from MOT.T_DCS_USER_RESOURCE_RELATION
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from MOT.T_DCS_USER_RESOURCE_RELATION
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
 
  <insert id="insert" parameterType="com.cs.system.entity.UserResourceRelation" >
  	<selectKey keyProperty="id" resultType="String" order="BEFORE">  
       select sys_guid() from dual  
    </selectKey>  
    insert into MOT.T_DCS_USER_RESOURCE_RELATION (ID, AUTHORIZE_TYPE, RESOURCE_ID, 
      USER_ID, CREATED_DATE)
    values (#{id,jdbcType=VARCHAR}, #{authorizeType,jdbcType=DECIMAL}, #{resourceId,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cs.system.entity.UserResourceRelation" >
    insert into MOT.T_DCS_USER_RESOURCE_RELATION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="authorizeType != null" >
        AUTHORIZE_TYPE,
      </if>
      <if test="resourceId != null" >
        RESOURCE_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="createdDate != null" >
        CREATED_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="authorizeType != null" >
        #{authorizeType,jdbcType=DECIMAL},
      </if>
      <if test="resourceId != null" >
        #{resourceId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <update id="updateByExampleSelective" parameterType="map" >
    update MOT.T_DCS_USER_RESOURCE_RELATION
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.authorizeType != null" >
        AUTHORIZE_TYPE = #{record.authorizeType,jdbcType=DECIMAL},
      </if>
      <if test="record.resourceId != null" >
        RESOURCE_ID = #{record.resourceId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.createdDate != null" >
        CREATED_DATE = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update MOT.T_DCS_USER_RESOURCE_RELATION
    set ID = #{record.id,jdbcType=VARCHAR},
      AUTHORIZE_TYPE = #{record.authorizeType,jdbcType=DECIMAL},
      RESOURCE_ID = #{record.resourceId,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      CREATED_DATE = #{record.createdDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cs.system.entity.UserResourceRelation" >
    update MOT.T_DCS_USER_RESOURCE_RELATION
    <set >
      <if test="authorizeType != null" >
        AUTHORIZE_TYPE = #{authorizeType,jdbcType=DECIMAL},
      </if>
      <if test="resourceId != null" >
        RESOURCE_ID = #{resourceId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cs.system.entity.UserResourceRelation" >
    update MOT.T_DCS_USER_RESOURCE_RELATION
    set AUTHORIZE_TYPE = #{authorizeType,jdbcType=DECIMAL},
      RESOURCE_ID = #{resourceId,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
   <!-- 自定义 -->
  <sql id="conditions" >
  	<where>
  	 <foreach collection="sqlCriterions" item="criterionItem" separator="and" >
  	 	<choose>
  	 		<when test="criterionItem.noValue">
  	 			${criterionItem.condition}
  	 		</when>
  	 		<when test="criterionItem.singleValue">
  	 			${criterionItem.condition} #{criterionItem.value}
  	 		</when>
  	 		<when test="criterionItem.betweenValue">
  	 			${criterionItem.condition} #{criterionItem.value} and #{criterionItem.secondValue}
  	 		</when>
  	 		<when test="criterionItem.listValue">
  	 			 ${criterionItem.condition}
                  <foreach collection="criterionItem.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
  	 		</when>
  	 	</choose>
      </foreach>
  	</where>
  </sql>

  <select id="findAllData" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from MOT.T_DCS_USER_RESOURCE_RELATION
  </select>
  
  <select id="findByCondition" parameterType="com.cs.mvc.dao.SqlCondition" resultMap="BaseResultMap">
	select 
	<if test="distinct" >
      distinct
    </if>
	<include refid="Base_Column_List" />
	  from MOT.T_DCS_USER_RESOURCE_RELATION
	<if test="_parameter != null" >
      <include refid="conditions" />
    </if>
    <if test="orderbyClause != null and orderby" >
    	order by
    <foreach collection="orderbyClause" item="listItem" separator=",">
      	 ${listItem}
    </foreach>
    </if>
  </select>
  
  <select id="countByCondition" parameterType="com.cs.mvc.dao.SqlCondition"  resultType="java.lang.Integer">
   	select count(*) from MOT.T_DCS_USER_RESOURCE_RELATION
    <if test="_parameter != null" >
      <include refid="conditions" />
    </if>
  </select>
  
  
  <!-- 根据用户Id删除角色资源关联表 -->
   <delete id="deleteByUserId" parameterType="java.lang.String" >
    delete from MOT.T_DCS_USER_RESOURCE_RELATION where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  
   <!-- 根据资源Id删除角色资源关联表信息 -->
  <delete id="deleteByResourceId" parameterType="java.lang.String" >
    delete from MOT.T_DCS_USER_RESOURCE_RELATION where resource_id = #{resourceId,jdbcType=VARCHAR}
  </delete>
  
</mapper>